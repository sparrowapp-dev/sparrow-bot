name: Sparrow Bot Example Usage

on:
  issues:
    types: [opened, edited, closed, reopened]
  pull_request:
    types: [opened, edited, synchronize, closed, reopened]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

jobs:
  stale:
    name: Check for stale issues and PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run stale check
        run: npm run cli stale
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  pr-title:
    name: Validate PR title
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'edited' || github.event.action == 'synchronize')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate PR title
        run: npm run cli pr-title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
  
  auto-label:
    name: Auto-label issues and PRs
    runs-on: ubuntu-latest
    if: (github.event_name == 'issues' && github.event.action == 'opened') || (github.event_name == 'pull_request' && github.event.action == 'opened')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Auto-label
        run: npm run cli auto-label
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number || github.event.pull_request.number }}
          CONTENT: ${{ github.event.issue.body || github.event.pull_request.body }}
  
  sync-labels:
    name: Sync labels
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Sync labels
        run: npm run cli sync-labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
